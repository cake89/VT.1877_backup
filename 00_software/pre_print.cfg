[gcode_macro FLASH_LIGHTS]
gcode:
        {% set prev = printer["output_pin daylight"].value %}
        {% for i in range(3) %}
            SET_PIN PIN=daylight VALUE=1
            G4 P150
            SET_PIN PIN=daylight VALUE={prev}
            G4 P100
        {% endfor %}

######################################################################################

[delayed_gcode _STOP_FILTER_DELAYED]
gcode:
    SET_FAN_SPEED FAN=TheFilter SPEED=0
    GIMME_ALL_GREEN
    FLASH_LIGHTS
    SET_LED LED="btt_mini12864" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1

######################################################################################

[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(0)|float %}
    {% set g = params.G|default(0)|float %}
    {% set b = params.B|default(0)|float %}

    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=3

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

[gcode_macro SHUTDOWN]
gcode:
    LCDRGB R=0 G=0 B=0                               ; Turn off LCD neopixels (see above for this macro)
    OFF                                              ; Shortcut to turn everything off (see above for this macro)
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

################################## HEATSOAK OPTIONS ###################################

[gcode_macro HEATSOAK]
gcode:
    # Parameters
    {% set t = params.T|default(115)|int %}
    {% set move = params.MOVE|default(1)|int %}

    CG28

    M140 S{t}                                       ; heat bed
    {% if t >= 100 %}
        #M106 S205                                   ; turn on part fan (80%)
        M106 S255                                   ; turn on part fan (100%)
    {% else %}
        M106 S0                                     ; turn part fan off
    {% endif %}
    {% if move == 1 %}
        PARKCENTER
        #CENTER
        GIMME_ALL_RED
        M84                                         ; turn off steppers
    {% endif %}


##################################################################################################

######################################################################
## Filamentwechsel ##
######################################################################
# M600: Filamentwechsel. Dieses Makro h채lt den Drucker an, bewegt das
# Werkzeug in die Wechselposition und zieht das Filament um 130 mm ein.
# Passe die Einzieheinstellungen f체r deinen eigenen Extruder an. Nachdem das
# Filament gewechselt wurde, setze den Druck einfach fort.

# Versuch, T0-T4 als M600-Makro zu verwenden (wenn mehr als 5 Materialfarben vorhanden sind, f체ge hier weitere hinzu)
[gcode_macro T0]
gcode:
  M600
[gcode_macro T1]
gcode:
  M600
[gcode_macro T2]
gcode:
  M600
[gcode_macro T3]
gcode:
  M600
[gcode_macro T4]
gcode:
  M600
[gcode_macro M600]
########### Gcode ############
gcode:
  #{% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  #{% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-50)|int %}
  {% set tool = params.tool|default(0)|int %}
  PAUSE
  G91
  G1 E-5 F4000
  G1 Z{Z}
  G90
  #G1 X{X} Y{Y} F3000 ;Parkposition
  G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+25} F19500   
  G0 E10 F500 ;Filament extrudieren, um einen besseren Tropfen am Ende zu erhalten
  G0 E{E} F600 ;Zus채tzliches Filament einziehen, um es aus der Schmelzzone zu bewegen
  G92 E0

##################################################################################################

[gcode_macro HEAT_SOAK]
description: heats the bed for a while

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET|default(115)|float %}
    {% set DURATION = (params.DURATION|default(60)|int)*60 %} ## minutes to seconds

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }

    ;; run the fan to circulate air
    _SET_FAN_SPEED PERCENT=100

    ;; put the bed and nozzle where they're a safe distance apart
    CG28
    #CENTER
    PARKCENTER

    M84 ;; turn off steppers

    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }

        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}

        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan

            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    {% else %}

        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}

        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }

        ## dwell for 1ms to prevent from going idle
        G4 P1

    {% endif %}

[gcode_macro _SET_FAN_SPEED]
gcode:
    M106 S{ (params.PERCENT | float) * 255 / 100 }


[gcode_macro CENTER]
gcode:
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F7200

##################################################################################################

######################### UNLOAD EXTRUDER #########################

[gcode_macro UNLOAD_EXTRUDER]
description: Unload by 50 mm
gcode:
  STATUS_CLEANING
  M400                           ; wait for buffer to clear
  CG28
  M106 S0
  G90
  G0 X{printer.toolhead.axis_maximum.x/2} Y50 Z150 F19500 
  M109 S260
  M83                            ; relative extruder mode
  G1 E10 F150                    ; Slow Extrude
  G92 E0                         ; zero the extruder
  G1 E-50 F960                   ; retract filament
  G92 E0                         ; zero the extruder
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M106 S255

############################## POOP ##############################

[gcode_macro POOP]
description: Poop new loaded material
gcode:
  CG28
  M106 S0
  G90
  G0 X{printer.toolhead.axis_maximum.x/2} Y50 Z150 F19500 
  M109 S260
  M83
  G1 E10 F300
  G1 E10 F360
  G1 E10 F420
  G1 E50 F300
  G92 E0
  G1 E-5 F3000
  G92 E0
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M106 S255

######################### ALL TOOLHEAD LED CHANGE #########################

[gcode_macro GIMME_ALL_RED]
description: All SB LEDs red
gcode:
    SET_LED LED="sb_leds" RED=1 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1


[gcode_macro GIMME_ALL_GREEN]
description: All SB LEDs red
gcode:
    SET_LED LED="sb_leds" RED=0 GREEN=1 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1


#######################
#   Cold Pull Macro   #
#######################   
[gcode_macro Clean_Filament_Cold_Pull]
description: Sparta3D Cleaning Filament Cold Pull, Thank you Vince
gcode:
## -- Set Extruder Temp
    {% set TEMP = params.TEMP|default(260)|float %}
## -- Resting Temp
    {% set REST_TEMP = params.REST_TEMP|default(50)|float %}
## -- Set Pulling Extruder Temp
    {% set PULL_TEMP = params.PULL_TEMP|default(130)|float %}

## --
    M109 S{TEMP}                ; Turn on Heaters
    M106 S128                   ; Part Cooling Fan
    G1 E50 F2000                ; Pull in Filament 
    G1 E100 F150                ; Slow Extrude
    M400
    M109 S{REST_TEMP}           ; Cooldown
    M109 S{PULL_TEMP}           ; Temp Set for pulling
    G4 P{2 * 60000}             ; Dwell for 2 min
    BEEP I=3 DUR=100 FREQ=1000  ; Beeps lets you know it's ready
    G4 P{1 * 60000}             ; Dwell for 1 min
    M104 S0                     ; Turn Off Hotend
    G4 P{1 * 60000}             ; Dwell for 1 min
    M106 S0                     ; Turn Off Fans

## -//-  


######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}


######################### PRIME_NOZZLE #########################

[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Y6 X100 F10000
    G1 Z10 F900
    G1 Z0.25 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 E15 F1000
    G1 X-94 E4 F1000   ; Extrude filament xx mm (how much it retracted in PRINT_END).
    G1 Y-1 F1000
    G1 X60 E9 F1000    ; Print second part of the line.
    G1 X0.5 E0 F1000   ; Wipe back to break string.
    G1 X5.5 E0 F1000   ; Wipe forward to break string.
    G1 Z20 E0 F900
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE


######################### KLIPPER-BACKUP #########################

[gcode_shell_command backup_cfg]
command: ~/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg