## Right now, this is mostly from Andrew Ellis' BedFan.cfg, https://github.com/VoronDesign/VoronUsers/blob/master/printer_mods/Ellis/Bed_Fans/Klipper_Macros/bedfans.cfg.  
## Things I added: a Slow Threshold and Off Threshold. Update only the sections that say UPDATE WITH YOUR PRINTER INFO. Unless you are removing the Pi_Fan, then remove it and
##   the lines with the comment 'Added this for myself'
## 7/1/2023 Updated to add comments and Off Threshold.

##############################################################################################################

# https://github.com/blankhaus/klipper-filter_monitor

#[filter_monitor air_filter]
#fan: fan_generic TheFilter # e.g fan_generic bed_filter, heater_generic heated_chamber, etc
#max_runtime_hours: 50 # Defaults to 50 hours
#max_days: 30 # Defaults to 30 days
#interval: 30 # Defaults to 30 seconds
#stats_caption: ""
# Output override for FILTER_STATS macro. Defaults to "<filter_name> at". e.g. Air Filter at 98%
#expiry_gcode: # Executed when filter meets threshold condition
#path: ~/printer_data/config/plugins/filter_monitor # Folder where filter data is stored

#[gcode_macro Filter_reset]
#gcode:
#  RESET_FILTER NAME=air_filter

##############################################################################################################

#################################################
# !!! UPDATE WITH YOUR PRINTER INFO !!! #########
############### Config options ##################

[gcode_macro _BEDFANVARS]
variable_threshold: 100		# If bed temp target is above this threshold, fans tun on slow, until target reached, then turn on fast.
variable_slowthreshold: 50	# AKInferno Added: if the bed temp target is above this threshold, fans turn on and stay slow.
variable_fast: 1.0		    # Current of fast Fan speed
variable_slow: 0.3		    # Current of slow Fan speed (while bed is heating / for targets below top threshold / fan speed during cooldown 
variable_offthreshold: 60  	# AKInferno Added: run fan after bed is turned off, until the bed temp falls below this temp.																									 
gcode:

########## Bed Fans #########

[fan_generic TheFilter]
pin: PD14
#cycle_time: 0.05
kick_start_time: 0.5

########## Aliases #########

[gcode_macro TheFilterSLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
	
	SET_FAN_SPEED FAN=TheFilter SPEED={SLOW}

[gcode_macro TheFilterFAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
	
	SET_FAN_SPEED FAN=TheFilter SPEED={FAST}

[gcode_macro TheFilterOFF]
gcode:
	SET_FAN_SPEED FAN=TheFilter SPEED=0

############ Command overrides ############

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% set SLOWTHRESHOLD = printer["gcode_macro _BEDFANVARS"].slowthreshold|int %}
																		   	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			TheFilterSLOW
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
		#{% elif TARGET >= SLOWTHRESHOLD %}	# added this to Ellis' original config to turn fans on low, but not start the monitoring loop for targets in PLA/PETG range. 
		#	TheFilterSLOW																																						   
		{% else %}
			#TURN_OFF_HEATERS
            TheFilterOFF
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
	
# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	
	{% if S >= THRESHOLD %}
		TheFilterSLOW																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		TheFilterOFF															    # < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	    # Set bed temp
	  
	{% if S != 0 %}
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	# Wait for bed temp within 5 degrees
	{% endif %}

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		TheFilterFAST																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}
	
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	
	_TURN_OFF_HEATERS											                                        # Turn off heaters
 	{% if printer.heater_bed.temperature|int >= printer["gcode_macro _BEDFANVARS"].offthreshold %}     # If bed temp is above Off Theshold, start timer for bedfan for 5min and shutdown heaters
		UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300	
	{% endif %}
	
################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% set COOLDOWN = printer["gcode_macro _BEDFANVARS"].offthreshold %}
																 
	{% if printer.heater_bed.target >= THRESHOLD %}						    # Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			TheFilterFAST													    # If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% elif printer.heater_bed.target == 0 %}								    # If TARGET is 0 (So fans turned off)
		{% if printer.heater_bed.temperature|int >= COOLDOWN %}				# AND if Bed temperature is above Off Threshold
			TheFilterSLOW												        # Set to slow fanspeed
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300					# start timer to check again in 5 min
		{% else %}
			TheFilterOFF                                                       # TARGET is 0 and bed temp is < Off Threshold turn Filter off and don't restart timer
		{% endif %}
	{% endif %}